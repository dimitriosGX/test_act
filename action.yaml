name: 'Hackbot CI'
description: 'Hackbot action'

inputs:
  address:
    description: 'The address of the bot to hack'
    required: false
    default: 'localhost'
  port:
    description: 'The port of the bot to hack'
    required: false
    default: '5000'
  api_key:
    description: 'The API key to use to authenticate with the bot'
    required: true
  output:
    description: 'The output file to write the results to'
    required: false
  artifact:
    type: boolean
    description: 'Whether to upload the logs as an artifact'
    required: false
    default: 'false'

outputs:
  results:
    description: 'The results of the hack'
    value: ${{ steps.hack_contract.outputs.results }}

runs:
  using: "composite"
  steps:
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        cache: 'pip' 
        python-version: '3.12'

    - name: Install dependencies
      shell: bash
      run: |
        python -m pip install aiohttp requests

    - name: Hack the contract
      id: hack_contract
      shell: bash
      run: |       
        ${{ github.action_path }}/src/compress.sh
        python ${{ github.action_path }}/src/bot_api.py \
          --address ${{ inputs.address }} \
          --port ${{ inputs.port }} \
          --api_key ${{ inputs.api_key }} \
          --output ${{ inputs.output }}

    - name: Move logs
      shell: bash
      if: inputs.artifact == 'true'
      run: |
        mkdir hb_logs
        mv ${{ inputs.output }} hb_logs/${{ inputs.output }}

    - name: Upload logs
      if: inputs.artifact == 'true'
      uses: actions/upload-artifact@v4
      with:
        name: hack-logs
        path: hb_logs
        retention-days: 90

    - name: Print results
      shell: bash
      run: |
        echo '${{ steps.hack_contract.outputs.results }}' | jq -ca
